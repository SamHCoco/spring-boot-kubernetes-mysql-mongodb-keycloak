apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-init-config
  namespace: spring-k8
data:
  init.sql: |
    CREATE DATABASE IF NOT EXISTS k8;
---

apiVersion: v1
kind: Secret
metadata:
  name: mysql-secrets
  namespace: spring-k8
type: Opaque
data:
  root-password: YWRtaW4=
---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  namespace: spring-k8
spec:
  accessModes:
    - ReadWriteOnce
  volumeName: mysql-pv
  resources:
    requests:
      storage: 5Gi
---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  namespace: spring-k8
spec:
  serviceName: mysql-headless-service
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:8
          ports:
            - containerPort: 3307
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secrets
                  key: root-password
          volumeMounts:
            - name: mysql-data
              mountPath: /var/lib/mysql
              # Mounts the mysql config map below into the container
            - name: mysql-initdb
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: mysql-initdb
          configMap:
            name: mysql-init-config
  volumeClaimTemplates:
    - metadata:
        name: mysql-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 5Gi
---

apiVersion: v1
kind: Service
metadata:
  name: mysql-headless-service
  namespace: spring-k8
  labels:
    app: mysql
spec:
  clusterIP: None
  selector:
    app: mysql
  ports:
    - name: tcp
      protocol: TCP
      port: 3307