apiVersion: v1
kind: ConfigMap
metadata:
  name: mongodb-init-config
  namespace: spring-k8
data:
  init.js: |
    db = db.getSiblingDB('k8');
    db.createCollection('k8');
---

apiVersion: v1
kind: Secret
metadata:
  name: mongodb-secrets
  namespace: spring-k8
type: Opaque
data:
  mongodb-root-username: YWRtaW4=
  mongodb-root-password: YWRtaW4=
---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongodb-pvc
  namespace: spring-k8
spec:
  accessModes:
    - ReadWriteOnce
  volumeName: mongodb-pv
  resources:
    requests:
      storage: 5Gi
---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
  namespace: spring-k8
spec:
  serviceName: mongodb-headless-service
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
        - name: mongodb
          image: mongo:5.0.18
          ports:
            - containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongodb-secrets
                  key: mongodb-root-username
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-secrets
                  key: mongodb-root-password
          volumeMounts:
            - name: mongodb-data
              mountPath: /data/db
              # Mounts the mongodb config map below into the container
            - name: mongodb-initdb
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: mongodb-initdb
          configMap:
            name: mongodb-init-config
  volumeClaimTemplates:
    - metadata:
        name: mongodb-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 5Gi
---

apiVersion: v1
kind: Service
metadata:
  name: mongodb-headless-service
  namespace: spring-k8
  labels:
    app: mongodb
spec:
  clusterIP: None
  selector:
    app: mongodb
  ports:
    - name: tcp
      protocol: TCP
      port: 27017
